name: "Dev build dev packages"
on:
  pull_request:
  push:
    branches:
      - dev
  workflow_dispatch:
jobs:
  pre-work:
    runs-on: ubuntu-latest
    outputs:
      updatepy: ${{ steps.check_updatePy.outputs.changed}}
      updateNvfetcher: ${{ steps.check_nvfetcher.outputs.changed }}
      devTest: ${{ steps.check_dev.outputs.changed }}
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
          fetch-depth: 0 # otherwise, you will failed to push refs to dest repo
      - name: check nvfetcher.toml has changed
        id: check_nvfetcher
        run: |
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q "^nvfetcher.toml$"; then
             echo "changed=true" >> $GITHUB_OUTPUT
          fi
      - name: check update.pya has changed
        id: check_updatePy
        run: |
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q "update.py$"; then
             echo "changed=true" >> $GITHUB_OUTPUT
          fi
      - name: check tests/dev.nix has changed
        id: check_dev
        run: |
          echo "changed=$(yq  -r .dev ./tests/dev.yaml)" >> $GITHUB_OUTPUT

  update:
    runs-on: ubuntu-latest
    needs: pre-work
    outputs:
      update: ${{ steps.prev_git.outputs.update }}
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
          fetch-depth: 0 # otherwise, you will failed to push refs to dest repo
      - uses: cachix/install-nix-action@v31
        with:
          # FIXME: https://github.com/NixOS/nix/issues/9889
          extra_nix_config: |
            experimental-features = nix-command flakes configurable-impure-env auto-allocate-uids
      - name: Prepare github bot
        id: prev_git
        run: |
          git config --local user.email "flakebot@users.noreply.github.com"
          git config --local user.name "flakebot"
          git checkout -B test-dev
          if [[ '${{ needs.pre-work.outputs.updatepy }}' == 'true' || '${{ needs.pre-work.outputs.updateNvfetcher }}' == 'true' ]]; then
            echo "update=true" >> $GITHUB_OUTPUT
            echo "update=true" >> $GITHUB_ENV
          fi
      - name: update src by update.py
        if: needs.pre-work.outputs.updatepy == 'true'
        run: nix run .#updatePy
      - name: update src by nvfetcher
        if: needs.pre-work.outputs.updateNvfetcher == 'true'
        run: |
          cat > secrets.toml <<EOF
          [keys]
          github = "${{ secrets.GITHUB_TOKEN }}"
          EOF
          nix run .#nvfetcher
          rm -f secrets.toml
      - name: Push changes
        if: ${{ env.update == 'true' }}
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: 'test-dev'
          force: true

  dev-pacakges:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
    runs-on: ${{ matrix.os }}
    if: ${{needs.update.outputs.update == 'true' || needs.pre-work.outputs.devTest == 'true' }}
    needs:
      - pre-work
      - update
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: pre work
        run: |
          git config --local user.email "flakebot@users.noreply.github.com"
          git config --local user.name "flakebot"
          if [[ '${{ needs.update.outputs.update }}' == "true" ]]; then
            git fetch
            git checkout test-dev
          else
            git checkout -B test-dev
          fi
      - name: Install nix
        uses: cachix/install-nix-action@v31
        with:
          extra_nix_config: |
            experimental-features = nix-command flakes
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
      - name: Setup cachix
        uses: cachix/cachix-action@v16
        # Don't replace <YOUR_CACHIX_NAME> here!
        with:
          name: 'shanyouli'
          signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Check evaluation
        run: nix flake show
      - name: dev nix packages
        run: |
          echo "BUILD_DEV_PACKAGES=$(yq  -r .dev ./tests/dev.yaml)" >> $GITHUB_ENV
          nix run .#devci
        timeout-minutes: 240
      - name: build all packages
        if: ${{ env.BUILD_DEV_PACKAGES != 'true' }}
        run: nix run .#ci
        timeout-minutes: 240
      - name: modify code
        id: modify_code
        run: |
          if git status | grep "modified" ; then
            echo "MY_MODIFY=true" >> $GITHUB_ENV
            echo "MY_MODIFY=true" >> $GITHUB_OUTPUT
            git fetch origin
            if git ls-remote origin refs/heads/temp-testdev-${{ matrix.os }} | grep temp-testdev ; then
              git push origin --delete temp-testdev-${{ matrix.os }}
            fi
          fi
      - name: Commit back to repository
        if: ${{ env.MY_MODIFY  == 'true' }}
        uses: stefanzweifel/git-auto-commit-action@v6
        with:
          commit_message: 'auto: update package hashes ${{ matrix.os }}'
          create_branch: true
          branch: temp-testdev-${{ matrix.os }}

  publish-dev:
    runs-on: ubuntu-latest
    needs:
      - dev-pacakges
      - update
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
          fetch-depth: 0 # otherwise, you will failed to push refs to dest repo
      - name: pre work
        run: |
          git config --local user.email "flakebot@users.noreply.github.com"
          git config --local user.name "flakebot"
          if [[  '${{ needs.update.outputs.update }}' == "true" ]]; then
            git fetch origin
            git checkout test-dev
          else
            git checkout -B test-dev
          fi
      - name: Merge os chanages
        if: needs.dev-packages.outputs.MY_MODIFY == 'true'
        run: |
          git fetch origin
          echo "Getting information about all branches."
          echo "Merging of branch temp-testdev-macos-latest"
          if git ls-remote origin refs/heads/temp-testdev-macos-latest | grep temp-testdev-macos-latest ; then
            if git diff origin/temp-testdev-macos-latest | grep "+++"; then
              git checkout origin/temp-testdev-macos-latest
              echo "MY_MERGE_MACOS=true" >> $GITHUB_ENV
            fi
          fi
      - name: merge-to-master with macos-latest
        if: ${{ env.MY_MERGE_MACOS == 'true'}}
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: 'test-dev'
          force: true
      - name: merge ubuntu chanages
        if: needs.dev-packages.outputs.MY_MODIFY == 'true'
        run: |
          git fetch origin
          git checkout $MY_TARGET_BRANCH
          git pull
          echo "Merging of branch temp-testdev-ubuntu-latest"
          if git ls-remote origin refs/heads/temp-testdev-ubuntu-latest | grep temp-testdev-ubuntu-latest ; then
            if git diff origin/temp-testdev-ubuntu-latest | grep "+++"; then
              git checkout origin/temp-testdev-ubuntu-latest
              echo "MY_MERGE_LINUX=true" >> $GITHUB_ENV
            fi
          fi
      - name: merge-to-master with macos-latest
        if: ${{ env.MY_MERGE_LINUX == 'true'}}
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: 'test-dev'
          force: true
      - name: prev
        run: |
          git fetch
          git checkout test-dev
      - name: Push dev
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: 'dev'
          force: true
      - name: Push master
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: 'master'
          force: true
