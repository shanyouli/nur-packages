name: "Build and populate cache"
on:
  repository_dispatch:
    types: [trigger-second-workflow]
  pull_request:
  push:
    branches:
      - main
      - master
    paths:
      - 'pkgs/**'
      - '!pkgs/**/update.py'
      - '!pkgs/**/update.sh'
  # schedule:
  #   # rebuild everyday at 2:51
  #   # TIP: Choose a random time here so not all repositories are build at once:
  #   # https://www.random.org/clock-times/?num=1&earliest=01%3A00&latest=08%3A00&interval=5&format=html&rnd=new
  #   - cron: '0 22 * * 5'
  workflow_dispatch:

jobs:
  build-packages:
    strategy:
      fail-fast: false
      matrix:
        # Set this to notify the global nur package registry that changes are
        # available.
        #
        # The repo name as used in
        # https://github.com/nix-community/NUR/blob/master/repos.json
        nurRepo:
          - shanyouli
        # Set this to cache your build results in cachix for faster builds
        # in CI and for everyone who uses your cache.
        #
        # Format: Your cachix cache host name without the ".cachix.org" suffix.
        # Example: mycache (for mycache.cachix.org)
        #
        # For this to work, you also need to set the CACHIX_SIGNING_KEY or
        # CACHIX_AUTH_TOKEN secret in your repository secrets settings in
        # Github found at
        # https://github.com/<your_githubname>/nur-packages/settings/secrets
        cachixName:
          - shanyouli
        os:
          - ubuntu-latest
          - macos-latest
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Free Disk Space (Ubuntu)
      uses: jlumbroso/free-disk-space@main
      if: ${{ matrix.os == 'ubuntu-latest' }}
      with:
        # this might remove tools that are actually needed,
        # if set to "true" but frees about 6 GB
        tool-cache: false

        # all of these default to true, but feel free to set to
        # "false" if necessary for your workflow
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        docker-images: true
        swap-storage: true
    - name: Free Disk Space (macos)
      if: ${{ matrix.os == 'macos-latest' }}
      run: |
        df -h
        brew list
        [[ -d /Applications/Xcode_16.1_beta.app ]] && sudo rm -rf /Applications/Xcode_16.1_beta.app
        [[ -d /Applications/Xcode_16_beta_6.app ]] && sudo rm -rf /Applications/Xcode_16_beta_6.app
        [[ -d /Applications/Xcode_15.1.app ]] && sudo rm -rf /Applications/Xcode_15.1.app
        [[ -d /Applications/Xcode_15.2.app ]] && sudo rm -rf  /Applications/Xcode_15.2.app
        [[ -d /Applications/Xcode_15.3.app ]] && sudo rm -rf  /Applications/Xcode_15.3.app
        [[ -d /Applications/Xcode_14.3.1.app ]] && sudo rm -rf /Applications/Xcode_14.3.1.app
        [[ -d /Applications/Xcode_15.0.1.app ]] && sudo rm -rf /Applications/Xcode_15.0.1.app
        brew uninstall --zap google-chrome
        df -h
    - name: Install nix
      uses: cachix/install-nix-action@V27
      with:
        extra_nix_config: |
          experimental-features = nix-command flakes
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
    - name: Setup cachix
      uses: cachix/cachix-action@v15
      # Don't replace <YOUR_CACHIX_NAME> here!
      if: ${{ matrix.cachixName != '<YOUR_CACHIX_NAME>' }}
      with:
        name: ${{ matrix.cachixName }}
        signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - name: Check evaluation
      run: nix flake show
    - name: Build nix packages
      run: nix run .#ci
      timeout-minutes: 240
    - name: pull
      run: |
        if git status | grep "modified" ; then
          git stash && git branch --set-upstream-to=origin/master && git pull

          if [[ $(git stash list) != "" ]] && [[ $(git diff --name-only stash@{0} HEAD) != "" ]]; then
            git stash apply
          fi
        else
          git branch --set-upstream-to=origin/master && git pull
        fi
    - name: Commit back to repository
      uses: stefanzweifel/git-auto-commit-action@v5
      with:
        commit_message: 'auto: update package hashes'
    # - name: Trigger NUR update
    #   # Don't replace <YOUR_REPO_NAME> here!
    #   if: ${{ matrix.nurRepo != '<YOUR_REPO_NAME>' }}
    #   run: curl -XPOST "https://nur-update.nix-community.org/update?repo=${{ matrix.nurRepo }}"

  publish-stable:
    runs-on: ubuntu-latest
    needs:
      - build-packages
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
          fetch-depth: 0 # otherwise, you will failed to push refs to dest repo
      - name: Prepare flakebot branch
        run: |
          git config --local user.email "flakebot@users.noreply.github.com"
          git config --local user.name "flakebot"
      - name: Install nix
        uses: cachix/install-nix-action@V27
        with:
          extra_nix_config: |
            experimental-features = nix-command flakes
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
      - name: update README.md
        run: nix run .#readme
      - name: Push stable
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: 'master'
          force: true
      - name: switch stable
        run: git checkout -B stable
      - name: Push stable
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: 'stable'
          force: true
